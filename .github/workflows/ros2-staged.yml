name: Build and Push ROS2 Images in Stages

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'creator/**'
  schedule:
    - cron: '0 0 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  base_ros_user:
    name: Ubuntu -> ROS -> user
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        os: ["20.04", "22.04", "24.04"]
        ros: [rolling, kilted, jazzy, humble, noetic]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build base layer
        run: docker build -f creator/common/Dockerfile.base --build-arg BASE_IMAGE=${{ matrix.os }} -t base:${{ matrix.os }} .
      - name: Build ROS layer
        run: |
          if [[ "${{ matrix.ros }}" == "noetic" || "${{ matrix.ros }}" == "kinetic" ]]; then
            ROS_FILE=creator/ros1/Dockerfile.${{ matrix.ros }}
          else
            ROS_FILE=creator/ros2/Dockerfile.${{ matrix.ros }}
          fi
          docker build -f $ROS_FILE --build-arg BASE_IMAGE=base:${{ matrix.os }} -t ros:${{ matrix.os }}-${{ matrix.ros }} .
      - name: Build final user image
        run: |
          docker build -f creator/common/Dockerfile.user --build-arg BASE_IMAGE=ros:${{ matrix.os }}-${{ matrix.ros }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }} .
      - name: Push image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}

  base_ros_moveit_user:
    name: Ubuntu -> ROS -> MoveIt -> user
    runs-on: ubuntu-latest
    needs: base_ros_user
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        os: ["20.04", "22.04", "24.04"]
        ros: [rolling, kilted, jazzy, humble, noetic]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build base layer
        run: docker build -f creator/common/Dockerfile.base --build-arg BASE_IMAGE=${{ matrix.os }} -t base:${{ matrix.os }} .
      - name: Build ROS layer
        run: |
          if [[ "${{ matrix.ros }}" == "noetic" || "${{ matrix.ros }}" == "kinetic" ]]; then
            ROS_FILE=creator/ros1/Dockerfile.${{ matrix.ros }}
          else
            ROS_FILE=creator/ros2/Dockerfile.${{ matrix.ros }}
          fi
          docker build -f $ROS_FILE --build-arg BASE_IMAGE=base:${{ matrix.os }} -t ros:${{ matrix.os }}-${{ matrix.ros }} .
      - name: Add MoveIt
        run: |
          docker build -f creator/usage/Dockerfile.moveit --build-arg BASE_IMAGE=ros:${{ matrix.os }}-${{ matrix.ros }} --build-arg ROS_DISTRO=${{ matrix.ros }} -t moveit:${{ matrix.os }}-${{ matrix.ros }} .
      - name: Build final user image
        run: docker build -f creator/common/Dockerfile.user --build-arg BASE_IMAGE=moveit:${{ matrix.os }}-${{ matrix.ros }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-moveit .
      - name: Push image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-moveit

  mujoco_ros_user:
    name: Ubuntu -> MuJoCo -> ROS -> user
    runs-on: ubuntu-latest
    needs: base_ros_user
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        os: ["20.04", "22.04", "24.04"]
        ros: [rolling, kilted, jazzy, humble, noetic]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build base layer
        run: docker build -f creator/common/Dockerfile.base --build-arg BASE_IMAGE=${{ matrix.os }} -t base:${{ matrix.os }} .
      - name: Install MuJoCo
        run: docker build -f composer/mujoco/Dockerfile --build-arg BASE_IMAGE=base:${{ matrix.os }} --build-arg ROS_DISTRO=${{ matrix.ros }} -t mujoco:${{ matrix.os }}-${{ matrix.ros }} composer/mujoco
      - name: Build ROS layer
        run: |
          if [[ "${{ matrix.ros }}" == "noetic" || "${{ matrix.ros }}" == "kinetic" ]]; then
            ROS_FILE=creator/ros1/Dockerfile.${{ matrix.ros }}
          else
            ROS_FILE=creator/ros2/Dockerfile.${{ matrix.ros }}
          fi
          docker build -f $ROS_FILE --build-arg BASE_IMAGE=mujoco:${{ matrix.os }}-${{ matrix.ros }} -t ros:${{ matrix.os }}-${{ matrix.ros }}-mujoco .
      - name: Build final user image
        run: docker build -f creator/common/Dockerfile.user --build-arg BASE_IMAGE=ros:${{ matrix.os }}-${{ matrix.ros }}-mujoco -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-mujoco .
      - name: Push image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-mujoco

  mujoco_ros_moveit_user:
    name: Ubuntu -> MuJoCo -> ROS -> MoveIt -> user
    runs-on: ubuntu-latest
    needs: mujoco_ros_user
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        os: ["20.04", "22.04", "24.04"]
        ros: [rolling, kilted, jazzy, humble, noetic]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build base layer
        run: docker build -f creator/common/Dockerfile.base --build-arg BASE_IMAGE=${{ matrix.os }} -t base:${{ matrix.os }} .
      - name: Install MuJoCo
        run: docker build -f composer/mujoco/Dockerfile --build-arg BASE_IMAGE=base:${{ matrix.os }} --build-arg ROS_DISTRO=${{ matrix.ros }} -t mujoco:${{ matrix.os }}-${{ matrix.ros }} composer/mujoco
      - name: Build ROS layer
        run: |
          if [[ "${{ matrix.ros }}" == "noetic" || "${{ matrix.ros }}" == "kinetic" ]]; then
            ROS_FILE=creator/ros1/Dockerfile.${{ matrix.ros }}
          else
            ROS_FILE=creator/ros2/Dockerfile.${{ matrix.ros }}
          fi
          docker build -f $ROS_FILE --build-arg BASE_IMAGE=mujoco:${{ matrix.os }}-${{ matrix.ros }} -t ros:${{ matrix.os }}-${{ matrix.ros }}-mujoco .
      - name: Add MoveIt
        run: docker build -f creator/usage/Dockerfile.moveit --build-arg BASE_IMAGE=ros:${{ matrix.os }}-${{ matrix.ros }}-mujoco --build-arg ROS_DISTRO=${{ matrix.ros }} -t moveit:${{ matrix.os }}-${{ matrix.ros }}-mujoco .
      - name: Build final user image
        run: docker build -f creator/common/Dockerfile.user --build-arg BASE_IMAGE=moveit:${{ matrix.os }}-${{ matrix.ros }}-mujoco -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-mujoco-moveit .
      - name: Push image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-mujoco-moveit

  mujoco_ros_nav2_user:
    name: Ubuntu -> MuJoCo -> ROS -> Nav2 -> user
    runs-on: ubuntu-latest
    needs: mujoco_ros_user
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        os: ["20.04", "22.04", "24.04"]
        ros: [rolling, kilted, jazzy, humble, noetic]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build base layer
        run: docker build -f creator/common/Dockerfile.base --build-arg BASE_IMAGE=${{ matrix.os }} -t base:${{ matrix.os }} .
      - name: Install MuJoCo
        run: docker build -f composer/mujoco/Dockerfile --build-arg BASE_IMAGE=base:${{ matrix.os }} --build-arg ROS_DISTRO=${{ matrix.ros }} -t mujoco:${{ matrix.os }}-${{ matrix.ros }} composer/mujoco
      - name: Build ROS layer
        run: |
          if [[ "${{ matrix.ros }}" == "noetic" || "${{ matrix.ros }}" == "kinetic" ]]; then
            ROS_FILE=creator/ros1/Dockerfile.${{ matrix.ros }}
          else
            ROS_FILE=creator/ros2/Dockerfile.${{ matrix.ros }}
          fi
          docker build -f $ROS_FILE --build-arg BASE_IMAGE=mujoco:${{ matrix.os }}-${{ matrix.ros }} -t ros:${{ matrix.os }}-${{ matrix.ros }}-mujoco .
      - name: Add Nav2
        run: docker build -f creator/usage/Dockerfile.nav2 --build-arg BASE_IMAGE=ros:${{ matrix.os }}-${{ matrix.ros }}-mujoco --build-arg ROS_DISTRO=${{ matrix.ros }} -t nav2:${{ matrix.os }}-${{ matrix.ros }}-mujoco .
      - name: Build final user image
        run: docker build -f creator/common/Dockerfile.user --build-arg BASE_IMAGE=nav2:${{ matrix.os }}-${{ matrix.ros }}-mujoco -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-mujoco-nav2 .
      - name: Push image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.os }}-${{ matrix.ros }}-mujoco-nav2
